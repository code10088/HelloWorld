
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;


namespace cfg
{
public sealed partial class TbBuff_Count : TbBuffBase
{
    public TbBuff_Count(ByteBuf _buf)  : base(_buf) 
    {
        CountType = (CommonHandleType1)_buf.ReadInt();
        Count = _buf.ReadInt();
    }

    public static TbBuff_Count DeserializeTbBuff_Count(ByteBuf _buf)
    {
        return new TbBuff_Count(_buf);
    }

    /// <summary>
    /// 达到次数处理方式
    /// </summary>
    public readonly CommonHandleType1 CountType;
    /// <summary>
    /// 可触发次数<br/>0无限次触发<br/>-1不触发
    /// </summary>
    public readonly int Count;
   
    public const int __ID__ = 1635833649;
    public override int GetTypeId() => __ID__;

    public override void ResolveRef(Tables tables)
    {
        base.ResolveRef(tables);
        
        
    }

    public override string ToString()
    {
        return "{ "
        + "Priority:" + Priority + ","
        + "Limit:" + Limit + ","
        + "TotalTime:" + TotalTime + ","
        + "Condition:" + Condition + ","
        + "Action:" + Luban.StringUtil.CollectionToString(Action) + ","
        + "CountType:" + CountType + ","
        + "Count:" + Count + ","
        + "}";
    }
}

}
